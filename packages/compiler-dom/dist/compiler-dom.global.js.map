{"version":3,"file":"compiler-dom.global.js","sources":["../src/index.ts"],"sourcesContent":["export const enum NodeTypes {\n\tROOT,\n\tElEMENT,\n\tTEXT,\n\tSIMPLE_EXPRESSION = 4,\n\tINTERPOLATION = 5,\n\tATTRIBUTE = 6,\n\tDIRECTIVE = 7,\n\tCOMPOUND_EXPRESSION = 8,\n\tTEXT_CALL = 12,\n\tVNODE_CALL = 13,\n}\nfunction isEnd(context) { // 是不是解析完毕 ：解析完毕的核心就是context.source = ''\n\tconst source = context.source;\n\tif(source.startsWith('</')){\n\t\t\treturn true\n\t}\n\treturn !source\n}\n\nfunction parseElement(context){}\nfunction parseInterpolation(context){}\nfunction getCursor(context) {\n\tlet { line, column, offset } = context;\n\treturn { line, column, offset }\n}\nfunction advancePositionWithMutation(context, s, endIndex) {\n\t// 如何更新时第几行?\n\tlet linesCount = 0;\n\tlet linePos = -1;\n\tfor (let i = 0; i < endIndex; i++) {\n\t\t\tif (s.charCodeAt(i) == 10) { // 遇到换行就涨一行\n\t\t\t\t\tlinesCount++;\n\t\t\t\t\tlinePos = i; // 换行后第一个人的位置 \n\t\t\t}\n\t}\n\tcontext.offset += endIndex;\n\tcontext.line += linesCount;\n\tcontext.column = linePos == -1 ? context.column + endIndex : endIndex - linePos\n\t// 如何更新列数\n\t// 更新偏移量\n}\nfunction advanceBy(context, endIndex) {\n\tlet s = context.source;// 原内容\n\t// 计算出一个新的结束位置\n\tadvancePositionWithMutation(context, s, endIndex); // 根据内容和结束索引来修改上下文的信息\n\tcontext.source = s.slice(endIndex); // 截取内容\n}\n\nfunction parseTextData(context, endIndex) {\n\tconst rawText = context.source.slice(0, endIndex);\n\tadvanceBy(context, endIndex); // 在context.source中把文本内容删除掉\n\treturn rawText\n}\nfunction getSelection(context, start,end?) { // 获取这个信息对应的开始、结束、内容\n\t end = end || getCursor(context)\n\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\tsource: context.originalSource.slice(start.offset, end.offset)\n\t}\n}\nfunction parseText(context) { // 1.先做文本处理\n\tconst endTokens = ['<', '{{'];\n\tlet endIndex = context.source.length; // 文本的整个长度\n\t// 假设法 需要先假设 遇到 <  是结尾  在拿到遇到{{  去比较那个 在前 就是到哪\n\tfor (let i = 0; i < endTokens.length; i++) {\n\t\t\tconst index = context.source.indexOf(endTokens[i], 1);\n\t\t\tif (index !== -1 && endIndex > index) {\n\t\t\t\t\tendIndex = index;\n\t\t\t}\n\t}\n\t// 有了文本的结束位置 我就可以更新行列信息 \n\tlet start = getCursor(context);\n\tconst content = parseTextData(context, endIndex);\n\treturn {\n\t\t\ttype: NodeTypes.TEXT,\n\t\t\tcontent,\n\t\t\tloc: getSelection(context, start)\n\t}\n}\nfunction parseChildren(context) { // 根据内容做不同的处理\n\tconst nodes = [];\n\twhile (!isEnd(context)) {\n\t\t\tconst s = context.source; // 当前上下文中的内容  <  abc  {{}}\n\t\t\tlet node;\n\t\t\tif (s[0] == '<') { // 标签\n\t\t\t\t\tnode = parseElement(context)\n\t\t\t} else if (s.startsWith('{{')) { // 表达式  \n\t\t\t\t\tnode = parseInterpolation(context);\n\t\t\t} else {\n\t\t\t\t\tnode = parseText(context);\n\t\t\t}\n\t\t\tnodes.push(node)\n\t}\n\tnodes.forEach((node,index)=>{\n\t\t\tif(node.type === NodeTypes.TEXT){\n\t\t\t\t\tif(!/[^ \\t\\r\\n]/.test(node.content)){ // 只要没有内容，就删除掉\n\t\t\t\t\t\t\tnodes[index] = null\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnode.content = node.content.replace(/[ \\t\\r\\n]+/g,' ')\n\t\t\t\t\t}\n\t\t\t}\n\t})\n\treturn nodes.filter(Boolean); // 过滤null值\n}\n\nfunction createParserContext(content) {\n\treturn {\n\t\t\tline: 1,\n\t\t\tcolumn: 1,\n\t\t\toffset: 0,\n\t\t\tsource: content, // 这个source会被不停的移除？  等待source为空的时候解析完毕\n\t\t\toriginalSource: content // 这个值是不会变的 记录你传入的内容\n\t}\n}\n\nfunction createRoot(children,loc){\n\treturn {\n\t\t\ttype:NodeTypes.ROOT,\n\t\t\tchildren,\n\t\t\tloc\n\t}\n}\n\nfunction baseParse(content) {\n\t// 标识节点的信息 行、列、偏移量...\n\t// 我每解析一段 就移除一部分 \n\t\n\tconst context = createParserContext(content);\n\tconst start = getCursor(context); // 记录开始位置\n\treturn createRoot(parseChildren(context),getSelection(context,start))\n}\n\nexport function baseCompile(template) {\n\t// 讲模板转换成ast语法树\n\tconst ast = baseParse(template);\n\treturn ast\n}\n\n\n// 从 template - > ast语法树   (vue里面 有指令 有插槽 有事件)\n// ast - > transform -> codegen "],"names":[],"mappings":"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"}